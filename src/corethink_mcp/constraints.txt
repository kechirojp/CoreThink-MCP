# CoreThink-MCP 制約ファイル
# このファイルは、安全なコード変更のための制約ルールを定義します
# 論文Section 7 "Safety and Responsible AI Usage Guidelines"準拠

## 基本開発制約
MUST: 公開APIの変更を禁止
NEVER: printやconsole.logなどのデバッグ出力を追加しない
SHOULD: 関数変更時はdocstringを更新する
MUST: すべてのテストがパスすること
NEVER: パスワードや秘密情報をコードに含めない
SHOULD: 変更前にバックアップを作成する
MUST: 型ヒントを追加・維持する
NEVER: 例外処理を削除しない
SHOULD: ログ出力はloggingモジュールを使用する
MUST: ファイル変更前に制約検証を実行する

## GSR推論透明性制約（論文Section 5.3準拠）
MUST: 推論過程の各ステップを自然言語で記録する
MUST: 中間結論と最終判断の論理的関係を明示する
NEVER: ブラックボックス的な推論結果を提示しない
MUST: 推論の不確実性や仮定を明示する
SHOULD: 代替的推論経路の可能性を検討する

## 責任あるAI制約（論文Section 7準拠）
MUST: バイアス検出機能を推論プロセスに組み込む
MUST: 高リスク判断時は人間確認を要求する
NEVER: 害をもたらす可能性のある推論を実行しない
MUST: 失敗モードと緩和策を事前に特定する
SHOULD: レッドチーム評価プロセスを定期実行する

## 解釈可能性制約（論文Section 5準拠）
MUST: シンボリック推論による解釈可能性を維持する
NEVER: 説明不可能な決定を最終結果としない
MUST: 推論根拠を第三者検証可能な形式で提供する
SHOULD: 専門分野特化の説明レベルを調整する

## 敵対的環境対策制約（論文Section 3.4準拠）
MUST: 推論操作・バイアス注入の可能性を監視する
NEVER: 誘導的入力に基づく偏向判断を行わない
MUST: 独立検証可能な推論証跡を保持する
SHOULD: 敵対的攻撃に対する堅牢性を評価する

## 分野特化制約適用ルール
MEDICAL: constraints_medical.txtを医療関連判断時に適用
LEGAL: constraints_legal.txtを法的判断時に適用
GENERAL: 分野不明時は最も厳格な制約セットを適用
MUST: 分野横断的問題では複数制約セットを統合適用する
